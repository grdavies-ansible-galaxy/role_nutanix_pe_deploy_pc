---
- name: Check if prism central vm exists
  delegate_to: 127.0.0.1
  nutanix.ncp.ntnx_vms_info:
    nutanix_host: "{{ role_nutanix_pe_deploy_pc_host }}"
    nutanix_username: "{{ role_nutanix_pe_deploy_pc_host_username }}"
    nutanix_password: "{{ role_nutanix_pe_deploy_pc_host_password }}"
    validate_certs: "{{ role_nutanix_pe_deploy_pc_host_validate_certs }}"
    filter:
      vm_name: "{{ item.name }}"
    kind: vm
  register: role_nutanix_pe_deploy_pc_vm_check
  ignore_errors: true
  loop: "{{ role_nutanix_pe_deploy_pc_vm_list }}"

- name: Debug role_nutanix_pe_deploy_pc_vm_check
  ansible.builtin.debug:
    msg: "{{ role_nutanix_pe_deploy_pc_vm_check }}"
  when: role_nutanix_pe_deploy_pc_debug

- name: Too many VMs found
  ansible.builtin.fail:
    msg: "Too many VM name matches found for '{{ item.item.name }}'. Investigate cluster and retry playbook."
  loop: "{{ role_nutanix_pe_deploy_pc_vm_check.results }}"
  loop_control:
    label: "{{ item.item }}"
  when:
    - item.response.metadata.length > 1

- name: Set role_nutanix_pe_deploy_pc_vm_exists
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_vm_exists: true
  loop: "{{ role_nutanix_pe_deploy_pc_vm_check.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: item.response.metadata.length == 1

- name: Debug role_nutanix_pe_deploy_pc_vm_exists
  ansible.builtin.debug:
    msg: "{{ role_nutanix_pe_deploy_pc_vm_exists | default(false) }}"
  when: role_nutanix_pe_deploy_pc_debug

- name: Get Prism Element registration state
  ansible.builtin.uri:
    url: "https://{{ role_nutanix_prism_api_url_base }}/PrismGateway/services/rest/v1/multicluster/cluster_external_state"
    method: GET
    validate_certs: "{{ role_nutanix_pe_deploy_pc_host_validate_certs }}"
    headers:
      Authorization: "{{ role_nutanix_prism_api_auth_string_b64 }}"
    status_code: 200
  register: role_nutanix_pe_deploy_pc_registration_state
  no_log: true

- name: Debug role_nutanix_pe_deploy_pc_registration_state.json
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_registration_state.json
  when: role_nutanix_pe_deploy_pc_debug

- name: Set role_nutanix_pe_deploy_pc_registered
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_registered: true
  when: role_nutanix_pe_deploy_pc_registration_state.json | length != 0

- name: Debug role_nutanix_pe_deploy_pc_registered
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_registered
  when: role_nutanix_pe_deploy_pc_debug
