---
- name: Get container UUID
  block:
    - name: Set role_nutanix_pe_deploy_pc_container_uuid=None
      ansible.builtin.set_fact:
        role_nutanix_pe_deploy_pc_container_uuid: "None"

    - name: Search for UUID for container "{{ role_nutanix_pe_deploy_pc_container_name }}"
      ansible.builtin.import_role:
        name: grdavies.role_nutanix_pe_container_search
      vars:
        role_nutanix_pe_container_search_host: "{{ role_nutanix_pe_deploy_pc_host }}"
        role_nutanix_pe_container_search_host_username: "{{ role_nutanix_pe_deploy_pc_host_username }}"
        role_nutanix_pe_container_search_host_password: "{{ role_nutanix_pe_deploy_pc_host_password }}"
        role_nutanix_pe_container_search_host_port: "{{ role_nutanix_pe_deploy_pc_host_port }}"
        role_nutanix_pe_container_search_host_validate_certs: "{{ role_nutanix_pe_deploy_pc_host_validate_certs }}"
        role_nutanix_pe_container_search_name: "{{ role_nutanix_pe_deploy_pc_container_name }}"

    - name: Container not found
      ansible.builtin.fail:
        msg:
          "the container '{{ role_nutanix_pe_deploy_pc_container_name }}' was not found. Please check the input \
          variable role_nutanix_pe_deploy_pc_container_name or that the container is present on this Nutanix cluster"
      when:
        - role_nutanix_pe_container_search_found_uuid is not defined or role_nutanix_pe_container_search_found_uuid == "None"

- name: Find uuid for network "{{ role_nutanix_pe_deploy_pc_subnet_name }}"
  block:
    - name: Get subnets from nutanix.ncp collection
      nutanix.ncp.ntnx_subnets_info:
        nutanix_host: "{{ role_nutanix_pe_deploy_pc_host }}"
        nutanix_username: "{{ role_nutanix_pe_deploy_pc_host_username }}"
        nutanix_password: "{{ role_nutanix_pe_deploy_pc_host_password }}"
        validate_certs: "{{ role_nutanix_pe_deploy_pc_host_validate_certs }}"
      register: role_nutanix_pe_deploy_pc_cluster_subnets

    - name: Search subnets list for subnet name and return its uuid
      ansible.builtin.set_fact:
        role_nutanix_pe_deploy_pc_cluster_subnet_uuid: "{{ item.metadata.uuid }}"
      when: item.status.name == role_nutanix_pe_deploy_pc_subnet_name
      with_items: "{{ role_nutanix_pe_deploy_pc_cluster_subnets.response.entities }}"

- name: PCVM list not the correct length
  ansible.builtin.fail:
    msg: "Either provide 1 or 3 pcvm name & ip addresses"
  when:
    - role_nutanix_pe_deploy_pc_vm_list | length not in [1,3]

- name: PCVM VIP required for scale-out deployment
  ansible.builtin.fail:
    msg: "Provide a value for 'role_nutanix_pe_deploy_pc_vip' as this is a scale-out Prism Central deployment"
  when:
    - role_nutanix_pe_deploy_pc_vip is undefined
    - role_nutanix_pe_deploy_pc_vm_list | length > 1

- name: Debug
  when:
    - role_nutanix_pe_deploy_pc_debug
  block:
    - name: Debug role_nutanix_pe_deploy_pc_cluster_subnets.response
      ansible.builtin.debug:
        var: role_nutanix_pe_deploy_pc_cluster_subnets.response

    - name: Debug role_nutanix_pe_deploy_pc_cluster_subnet_uuid
      ansible.builtin.debug:
        var: role_nutanix_pe_deploy_pc_cluster_subnet_uuid

    - name: Debug role_nutanix_pe_deploy_pc_vm_list
      ansible.builtin.debug:
        var: role_nutanix_pe_deploy_pc_vm_list

- name: Subnet not found
  ansible.builtin.fail:
    msg:
      "the subnet '{{ role_nutanix_pe_deploy_pc_subnet_name }}' was not found. Please check the input variable role_nutanix_pe_deploy_pc_subnet_name or that \
      the subnet is present on this Nutanix cluster"
  when:
    - role_nutanix_pe_deploy_pc_cluster_subnet_uuid is not defined

- name: Get available PC versions
  ansible.builtin.uri:
    url: "https://{{ role_nutanix_prism_api_url_base }}/PrismGateway/services/rest/v1/upgrade/prism_central_deploy/softwares"
    method: GET
    validate_certs: "{{ role_nutanix_pe_deploy_pc_host_validate_certs }}"
    body_format: json
    headers:
      Authorization: "{{ role_nutanix_prism_api_auth_string_b64 }}"
    status_code: 200
    return_content: true
  register: role_nutanix_pe_deploy_pc_version_list
  ignore_errors: false

- name: Debug role_nutanix_pe_deploy_pc_version_list
  ansible.builtin.debug:
    msg: "{{ role_nutanix_pe_deploy_pc_version_list }}"
  when: role_nutanix_pe_deploy_pc_debug

- name: Get latest PC for this clusters AOS release
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_version_list_release_dates: "{{ role_nutanix_pe_deploy_pc_version_list.json | json_query('entities[*].releaseDate') | max }}"

- name: Debug role_nutanix_pe_deploy_pc_version_list_release_dates
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_version_list_release_dates
  when: role_nutanix_pe_deploy_pc_debug

- name: Get latest PC version name for this clusters AOS release
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_version: '{{ role_nutanix_pe_deploy_pc_version_list.json | json_query(query) | join("") }}'
  vars:
    query: "entities[?releaseDate==`{{ role_nutanix_pe_deploy_pc_version_list_release_dates }}`].version"
  when: role_nutanix_pe_deploy_pc_version is not defined

- name: Debug role_nutanix_pe_deploy_pc_version
  ansible.builtin.debug:
    msg: "{{ role_nutanix_pe_deploy_pc_version }}"
  when: role_nutanix_pe_deploy_pc_debug

- name: Get latest PC version data for "{{ role_nutanix_pe_deploy_pc_version }}"
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_version_data: '{{ role_nutanix_pe_deploy_pc_version_list.json | json_query(query) | join("") }}'
  vars:
    query: "entities[?name==`{{ role_nutanix_pe_deploy_pc_version }}`]"

- name: Specified PC version not available.
  ansible.builtin.fail:
    msg:
      "The Prism Central release specified '{{ role_nutanix_pe_deploy_pc_version }}' cannot be found.
      Please ensure that this release is enabled for 1-click deployment or has been manually uploaded to the cluster."
  when: not role_nutanix_pe_deploy_pc_version_data

- name: Debug role_nutanix_pe_deploy_pc_version_data
  ansible.builtin.debug:
    msg: "{{ role_nutanix_pe_deploy_pc_version_data }}"
  when: role_nutanix_pe_deploy_pc_debug

- name: Get PC deployment size from release metadata
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_metadata_vcpu: >-
      "{{ role_nutanix_pe_deploy_pc_version_data.prismCentralSizes | json_query(query) | first | json_query('vcpus') }}"
    role_nutanix_pe_deploy_pc_metadata_disk: >-
      "{{ role_nutanix_pe_deploy_pc_version_data.prismCentralSizes | json_query(query) | first | json_query('diskSizeInGib') }}"
    role_nutanix_pe_deploy_pc_metadata_vram: >-
      "{{ role_nutanix_pe_deploy_pc_version_data.prismCentralSizes | json_query(query) | first | json_query('memorySizeInGib') }}"
  vars:
    query: "[?pcVmFormFactor==`{{ role_nutanix_pe_deploy_pc_deploy_size }}`]"

- name: Debug role_nutanix_pe_deploy_pc_metadata_vcpu
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_metadata_vcpu
  when: role_nutanix_pe_deploy_pc_debug

- name: Debug role_nutanix_pe_deploy_pc_metadata_disk
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_metadata_disk
  when: role_nutanix_pe_deploy_pc_debug

- name: Debug role_nutanix_pe_deploy_pc_metadata_vram
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_metadata_vram
  when: role_nutanix_pe_deploy_pc_debug

- name: Get PC deployment size from defaults
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_default_vcpu: >-
      "{{ role_nutanix_pe_deploy_pc_size_defaults | json_query(query) | first | json_query('nutanix_pc_num_sockets') }}"
    role_nutanix_pe_deploy_pc_default_disk: >-
      "{{ role_nutanix_pe_deploy_pc_size_defaults | json_query(query) | first | json_query('nutanix_pc_data_disk_size') }}"
    role_nutanix_pe_deploy_pc_default_vram: >-
      "{{ role_nutanix_pe_deploy_pc_size_defaults | json_query(query) | first | json_query('nutanix_pc_memory_size') }}"
  vars:
    query: "[?size==`{{ role_nutanix_pe_deploy_pc_deploy_size }}`]"

- name: Debug role_nutanix_pe_deploy_pc_default_vcpu
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_default_vcpu
  when: role_nutanix_pe_deploy_pc_debug

- name: Debug role_nutanix_pe_deploy_pc_default_disk
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_default_disk
  when: role_nutanix_pe_deploy_pc_debug

- name: Debug role_nutanix_pe_deploy_pc_default_vram
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_default_vram
  when: role_nutanix_pe_deploy_pc_debug

- name: Set PC deployment size
  ansible.builtin.set_fact:
    role_nutanix_pe_deploy_pc_vcpu: "{{ role_nutanix_pe_deploy_pc_metadata_vcpu | default(role_nutanix_pe_deploy_pc_default_vcpu) }}"
    role_nutanix_pe_deploy_pc_disk: "{{ role_nutanix_pe_deploy_pc_metadata_disk | default(role_nutanix_pe_deploy_pc_default_disk) }} GB"
    role_nutanix_pe_deploy_pc_vram: "{{ role_nutanix_pe_deploy_pc_metadata_vram | default(role_nutanix_pe_deploy_pc_default_vram) }} GB"

- name: Debug role_nutanix_pe_deploy_pc_vcpu
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_vcpu
  when: role_nutanix_pe_deploy_pc_debug

- name: Debug role_nutanix_pe_deploy_pc_disk
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_disk
  when: role_nutanix_pe_deploy_pc_debug

- name: Debug role_nutanix_pe_deploy_pc_vram
  ansible.builtin.debug:
    var: role_nutanix_pe_deploy_pc_vram
  when: role_nutanix_pe_deploy_pc_debug
